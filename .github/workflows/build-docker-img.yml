name: docker-build

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository 
      run: | 
        git clone https://github.com/${{ github.repository }}.git
        cd ${{ github.event.repository.name }}
        git status

    - name: Create Dockerfile
      run: |
       cd ${{ github.event.repository.name }}
       echo 'FROM node:22-alpine' > Dockerfile
       echo 'WORKDIR /app' >> Dockerfile
       echo 'COPY package*.json ./' >> Dockerfile
       echo 'RUN npm install' >> Dockerfile
       echo 'COPY . .' >> Dockerfile
       echo 'EXPOSE 3000' >> Dockerfile
       echo 'CMD ["npm", "start"]' >> Dockerfile

    - name: Install jq 
      run: sudo apt-get install jq -y

    - name: Get latest tag
      run: |
        LAST_TAG=$(curl -s https://hub.docker.com/v2/repositories/${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}/tags/?page_size=5 | jq -r '.results[0].name')
        echo "Last tag: $LAST_TAG"
        FIRST_DIGIT="${LAST_TAG:0:1}"
        INCREMENT=$((FIRST_DIGIT + 1))
        NEW_TAG="${INCREMENT}.0"
        echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
        

    - name: Build docker image  
      run: |
        cd ${{ github.event.repository.name }}
        docker build -t ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${NEW_TAG} .

    - name: Verify Docker image
      run: |
        docker run -d -p 3000:3000 ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${NEW_TAG}
        sleep 10
        curl -f http://localhost:3000

    - name: Log in to DockerHub
      if: success() 
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin
    
    - name: Push Docker image to DockerHub
      if: success() 
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${NEW_TAG}
      
      




